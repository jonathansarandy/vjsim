% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgen.R
\name{fgen_get_output}
\alias{fgen_get_output}
\title{Get Instantaneous Output Of The Force Generator}
\usage{
fgen_get_output(
  current_time = 0,
  current_distance = 0,
  current_velocity = 0,
  mass = 75,
  weight = mass * gravity_const,
  push_off_distance = 0.4,
  gravity_const = 9.81,
  max_force = 3000,
  max_velocity = 4,
  decline_rate = 1.05,
  peak_location = -push_off_distance * 0.15,
  time_to_max_activation = 0.3
)
}
\arguments{
\item{current_time}{Numeric vector. Default is 0}

\item{current_distance}{Numeric vector. Default is 0}

\item{current_velocity}{Numeric vector. Default is 0}

\item{mass}{Numeric vector. Default is 75kg}

\item{weight}{Numeric vector. Default is mass x \code{gravity_const}}

\item{push_off_distance}{Numeric vector. Default is 0.4}

\item{gravity_const}{Numeric value. Default is 9.81}

\item{max_force}{Numeric value. Default is 3000N}

\item{max_velocity}{Numeric vector. Default is 4m/s}

\item{decline_rate}{Numeric vector. Default is 1.05}

\item{peak_location}{Numeric vector. Default is \code{-push_off_distance * 0.15}}

\item{time_to_max_activation}{Numeric vector. Default is 0.3s}
}
\value{
List with five elements: kinematics, system_constraints, fgen_parameters, fgen_output, and kinetics
}
\description{
\code{fgen_get_output} returns acceleration and force data based on the current system state (\code{current_time},
    \code{current_distance}, and \code{current_velocity}), system constraints (\code{mass}, \code{weight}, and \code{push_off_distance}),
    and parameters of the Forge Generator (\code{max_force}, \code{current_velocity}, \code{decline_rate}, \code{peak_location},
    and \code{time_to_max_activation})
}
\examples{
state <- expand.grid(
  current_time = seq(0, 0.25, length.out = 1000),
  current_distance = c(0.1, 0.15, 0.2, 0.25, 0.3),
  current_velocity = 0
)

fgen_data <- fgen_get_output(
  max_force = 3000,
  mass = 75,
  current_time = state$current_time,
  current_distance = state$current_distance,
  current_velocity = state$current_velocity
)
}
