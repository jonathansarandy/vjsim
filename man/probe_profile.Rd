% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probing.R
\name{probe_profile}
\alias{probe_profile}
\title{Probe Profile}
\usage{
probe_profile(
  mass = 75,
  push_off_distance = 0.4,
  max_force = 3000,
  max_velocity = 4,
  time_to_max_activation = 0.3,
  change_ratio = seq(0.9, 1.1, length.out = 3),
  aggregate = "raw",
  external_load = c(-40, -20, 0, 20, 40, 60, 80, 100),
  profile_func = get_all_profiles,
  ...
)
}
\arguments{
\item{mass}{Numeric value. Initial parameter value to be changed using \code{change_ratio}.}

\item{push_off_distance}{Numeric value. Initial parameter value to be changed using \code{change_ratio}}

\item{max_force}{Numeric value. Initial parameter value to be changed using \code{change_ratio}}

\item{max_velocity}{Numeric value. Initial parameter value to be changed using \code{change_ratio}}

\item{time_to_max_activation}{Numeric value. Initial parameter value to be changed using \code{change_ratio}}

\item{change_ratio}{Numeric vector indicating probing change ratios}

\item{aggregate}{How should \code{\link{get_all_profiles}} output be aggregated?
Default is "raw". Other options involve "ratio" and "diff" which use initial
output values}

\item{external_load}{Numeric vector. Default is  \code{c(-40, -20, 0, 20, 40, 60, 80)}. Forwarded to \code{\link{vj_profile}}}

\item{profile_func}{Profiling function. Default is \code{\link{get_all_profiles}}. Also use \code{\link{get_FV_profile}},
\code{\link{get_power_profile}}, and \code{\link{get_all_samozino_profiles}}}

\item{...}{Extra argument forwarded to \code{\link{vj_profile}}}
}
\value{
Probing data frame
}
\description{
\code{probe_profile} simulates the vertical jump profiling using \code{\link{vj_profile}} over \code{external_load} loads,
    but estimate which parameter brings biggest change in the profile summary metric returned by \code{profile_func}.
    This is done by keeping all parameters at initial value, while changing only one parameter. This is then repeated for
    all parameters. This way we can answer by changing what parameter for standardize change (\code{change_ratio})
    yield biggest change in profile summary metric (e.g. jump height)
}
\examples{
require(tidyverse)

# You call also use get get_all_samozino_profiles() function in the profile_func parameter
profile_probe_data <- probe_profile(
mass = 75,
max_force = 3000,
max_velocity = 3,
time_to_max_activation = 0.3,
time_step = 0.001,
external_load = c(-40, -20, 0, 20, 40, 60, 80, 100),
profile_func = get_all_profiles # Can also use get_all_samozino_profiles
)

plot_data <- gather(profile_probe_data, key = "variable", value = "value", -(1:8)) \%>\%
  filter(variable \%in\% c(
    "profile_mean_FV.F0",
    "profile_mean_FV.V0",
    "profile_mean_FV.Pmax",
    "profile_mean_FV.Sfv",
    "profile_mean_power.Pmax",
    "profile_mean_power.Pmax_location",
    "profile_mean_power.F0_perc"
  ))

ggplot(plot_data, aes(x = change_ratio, y = value, color = probing)) +
  theme_minimal() +
  geom_line() +
  facet_wrap(~variable, scales = "free_y") +
  xlab("Normalized parameter change") +
  ylab(NULL)

# -----------------------------------
# When probing using get_FV_profile or get_power_profile use the following
power_probe_data <- probe_profile(
  mass = 75,
  max_force = 3000,
  max_velocity = 3,
  time_to_max_activation = 0.3,
  time_step = 0.001,
  external_load = c(-40, -20, 0, 20, 40, 60, 80, 100),
  profile_func = function(...) list(list = get_power_profile(...))
)
}
